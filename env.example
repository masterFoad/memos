# OnMemOS v3 Environment Configuration
# Copy this file to .env and fill in your values

# =============================================================================
# GOOGLE CLOUD PLATFORM CONFIGURATION
# =============================================================================

# Google Cloud Project ID
PROJECT_ID=ai-engine-448418

# Google Cloud Authentication
# Option 1: Service Account Key File (Recommended for production)
GOOGLE_APPLICATION_CREDENTIALS=/path/to/your/service-account-key.json

# Option 2: Application Default Credentials (for development)
# Leave empty to use gcloud auth application-default login
# GOOGLE_APPLICATION_CREDENTIALS=

# Option 3: Direct Service Account Key (for containerized environments)
# GOOGLE_CLOUD_KEYFILE_JSON={"type": "service_account", ...}

# =============================================================================
# ONMEMOS SERVER CONFIGURATION
# =============================================================================

# Server Configuration
ONMEMOS_CONFIG=/home/foad/data/memos/onmemos-v3/ops/config.yaml
ONMEMOS_TEST_MODE=false

# Server Bind Address and Port
ONMEMOS_HOST=127.0.0.1
ONMEMOS_PORT=8080

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# Storage Provider (gcs, s3, azure)
STORAGE_PROVIDER=gcs

# Google Cloud Storage Configuration
GCS_DEFAULT_REGION=us-central1
GCS_DEFAULT_STORAGE_CLASS=STANDARD

# Bucket Configuration
BUCKET_ENABLED=true
BUCKET_MOUNT_BASE_PATH=/bucket

# =============================================================================
# WORKSPACE CONFIGURATION
# =============================================================================

# Default TTL for workspaces (minutes)
DEFAULT_WORKSPACE_TTL=180

# Maximum workspaces per user
MAX_WORKSPACES_PER_USER=4

# CPU and Memory Limits
MAX_CPU_QUOTA=4
MAX_MEMORY_LIMIT=8g

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Secret (change this in production!)
JWT_SECRET=change-me-to-a-secure-random-string

# Base URL for the service
BASE_URL=https://dev.yourdomain.tld

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log Level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Log to file (optional)
LOG_FILE=/var/log/onmemos/server.log

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Enable debug mode
DEBUG=false

# Enable hot reload (for development)
HOT_RELOAD=false

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker socket path
DOCKER_SOCKET=/var/run/docker.sock

# Docker network mode
DOCKER_NETWORK_MODE=bridge

# =============================================================================
# EXAMPLE SERVICE ACCOUNT KEY STRUCTURE
# =============================================================================
# If using GOOGLE_CLOUD_KEYFILE_JSON, your JSON should look like this:
# GOOGLE_CLOUD_KEYFILE_JSON={"type":"service_account","project_id":"your-project","private_key_id":"...","private_key":"-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n","client_email":"your-service@your-project.iam.gserviceaccount.com","client_id":"...","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"https://www.googleapis.com/robot/v1/metadata/x509/your-service%40your-project.iam.gserviceaccount.com"}
